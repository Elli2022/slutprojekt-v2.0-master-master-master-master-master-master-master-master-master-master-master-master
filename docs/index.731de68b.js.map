{"mappings":"AAAO,MAAMA,EAAW,CACpBC,eAAgBC,SAASC,eAAe,mBACxCC,oBAAqBF,SAASC,eAAe,yBAC7CE,aAAcH,SAASC,eAAe,iBACtCG,cAAeJ,SAASC,eAAe,YACvCI,cAAeL,SAASC,eAAe,YACvCK,KAAMN,SAASC,eAAe,QAC9BM,aAAcP,SAASQ,cAAc,KACrCC,wBAAyBT,SAASQ,cAAc,MAChDE,mBAAoBV,SAASQ,cAAc,MAC3CG,aAAcX,SAASQ,cAAc,SACrCI,SAAUZ,SAASQ,cAAc,MACjCK,KAAMb,SAASC,eAAe,QAC9Ba,eAAgBd,SAASQ,cAAc,MACvCO,UAAWf,SAASC,eAAe,aACnCe,UAAWhB,SAASC,eAAe,aACnCgB,YAAajB,SAASC,eAAe,gBACrCiB,cAAelB,SAASC,eAAe,kBACvCkB,gBAAiBnB,SAASC,eAAe,qBACzCmB,gBAAiBpB,SAASC,eAAe,qBACzCoB,kBAAmBrB,SAASsB,cAAc,4BAC1CC,oBAAqBvB,SAASsB,cAAc,8BAC5CE,cAAexB,SAASC,eAAe,kBACvCwB,oBAAqBzB,SAASC,eAAe,yBAC7CyB,YAAa1B,SAASC,eAAe,gBACrC0B,mBAAoB3B,SAASC,eAAe,wBAC5C2B,cAAe5B,SAASC,eAAe,mBACvC4B,kBAAmB7B,SAASC,eAAe,wBAC3C6B,kBAAmB9B,SAASC,eAAe,uBAC3C8B,aAAc/B,SAASC,eAAe,iBACtC+B,aAAchC,SAASC,eAAe,iBAStCH,EAASiB,YACTjB,EAASiB,UAAUkB,MAAMC,QAAU,SAGvCpC,EAASkB,UAAUiB,MAAMC,QAAU,OACnCpC,EAASe,KAAKsB,YAAYrC,EAASkB,WAGdhB,SAASQ,cAAc,OAC/B4B,UAAY,gBC9CzB,MAAMC,EAAU,6EAETC,eAAeC,IAClB,IACE,MAAMC,QAAiBC,MAAM,GAAGJ,eAChC,IAAKG,EAASE,GACZ,MAAM,IAAIC,MAAM,UAAUH,EAASI,UAAUJ,EAASK,cAExD,MAAMC,QAAuCN,EAASO,OACtD,IAAKD,EACH,MAAO,GAGT,OAD+BE,OAAOC,OAAOH,EAE/C,CAAE,MAAOI,GACP,MAAM,IAAIP,MAAM,wBAClB,CACF,CAGKL,eAAea,EAASC,SACLb,IAAtB,MACMc,EAAM,GAAGhB,UAAgBe,EAAKE,gBAC9BC,EAAO,CACTC,OAAQ,MACR3C,KAAM4C,KAAKC,UAAUN,GACrBO,QAAS,CACL,eAAgB,oCAIxB,IACI,MAAMnB,QAAiBC,MAAMY,EAAKE,GAElC,IAAKf,EAASE,GACV,MAAM,IAAIC,MAAM,UAAUH,EAASI,UAAUJ,EAASK,cAI1D,IAAqB,IAAjBO,EAAKQ,QAAkB,CACvB,MACMC,EAAa,GAAGxB,UAAgBe,EAAKE,wBACrCQ,EAAc,CAChBN,OAAQ,MACR3C,KAAM4C,KAAKC,WAAU,GACrBC,QAAS,CACL,eAAgB,oCAGlBI,QAAwBtB,MAAMoB,EAAYC,GAChD,IAAKC,EAAgBrB,GACjB,MAAM,IAAIC,MAAM,UAAUoB,EAAgBnB,UAAUmB,EAAgBlB,aAE5E,CACJ,CAAE,MAAOK,GAEL,MADAc,QAAQC,IAAIf,GACN,IAAIP,MAAM,mCACpB,CACJ,CAEOL,eAAe4B,EAAWC,GAC7B,MAAMd,EAAM,GAAGhB,UAAgB8B,SACzBZ,EAAO,CACTC,OAAQ,UAGZ,IACI,MAAMhB,QAAiBC,MAAMY,EAAKE,GAElC,IAAKf,EAASE,GACV,MAAM,IAAIC,MAAM,UAAUH,EAASI,UAAUJ,EAASK,aAE9D,CAAE,MAAOK,GAEL,MADAc,QAAQC,IAAIf,GACN,IAAIP,MAAM,yBACpB,CACJ,CAwBOL,eAAe8B,IAGlB,aAFoB7B,KACM8B,MAAMjB,GAAyB,cAAhBA,EAAKR,UACxB,IAC1B,CC1DAN,eAAegC,IACX,MAAMhB,EAAWxD,EAASM,cAAemE,MAAMC,OACzCC,EAAW3E,EAASO,cAAekE,MAAMC,OAE/C,GAAIlB,GAAYmB,EACZ,IACI,MACMC,SADcnC,KACI8B,MAAMjB,GAASA,EAAKE,WAAaA,GAAYF,EAAKqB,WAAaA,IAEvF,GAAIC,EAAW,CACXA,EAAU9B,OAAS,kBACbO,EAASuB,GACf5E,EAASiB,UAAUkB,MAAMC,QAAU,OACnCpC,EAASkB,UAAUiB,MAAMC,QAAU,QAC/BpC,EAASmB,YACTnB,EAASmB,YAAY0D,YAAc,iBAAiBD,EAAUpB,WAE9DU,QAAQY,MAAM,gCAGlBC,IAoChBvC,iBACI,MAAMQ,QAAcP,IACduC,EAAgBhC,EAAMiC,QAAO3B,GAAwB,cAAhBA,EAAKR,SAEhDkC,EAAcE,SAAQ5B,IAClB,MAAM6B,EAAKjF,SAASQ,cAAc,MAClCyE,EAAGN,YAAc,GAAGvB,EAAKE,YAGzB,MAAMhD,EAAON,SAASQ,cAAc,QAC9B0E,EAAQlF,SAASQ,cAAc,SACrC0E,EAAMC,KAAO,OACbD,EAAME,YAAc,uBACpB9E,EAAK6B,YAAY+C,GAEjB,MAAMG,EAASrF,SAASQ,cAAc,UACtC6E,EAAOF,KAAO,SACdE,EAAOV,YAAc,SACrBU,EAAOC,GAAK,qBACZhF,EAAK6B,YAAYkD,GAIjB/E,EAAKiF,iBAAiB,UAAUjD,MAAOkD,IACnCA,EAAMC,iBAEN,MAAMC,EAAYR,EAAMX,MAAMC,OAC9B,GAAIkB,EAAW,CACXtC,EAAKlC,cAAgBkC,EAAKlC,eAAiB,GAC3CkC,EAAKlC,cAAcyE,KAAKD,GACxBtC,EAAKQ,SAAU,QACTT,EAASC,GAEf,MAAM6B,EAAKjF,SAASQ,cAAc,MAClCyE,EAAGN,YAAc,GAAGvB,EAAKE,aAAaoC,IACtC5F,EAASoB,cAAeiB,YAAY8C,GAEpCC,EAAMX,MAAQ,EAClB,MACIzE,EAASS,aAAaqF,UAAY,gCAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IACP,IAIJb,EAAG9C,YAAY7B,GAGXR,EAASuB,mBACTvB,EAASuB,kBAAkBc,YAAY8C,EAAA,GAGnD,CA1FgBc,GAG2B/F,SAASC,eAAe,sBAC/B0E,YAAc,iBAAiBD,EAAUpB,UACjE,MACIU,QAAQC,IAAInE,EAASS,cACrBT,EAASS,aAAaqF,UAAY,6CAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IAEX,CAAE,MAAO5C,GACLc,QAAQC,IAAIf,GACZpD,EAASS,aAAaqF,UAAY,+BAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IACP,MAEAhG,EAASS,aAAaqF,UAAY,wCAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IAGX,CAkEAxD,eAAeuC,IACX,MAAM5D,QAAoBmD,IACtBnD,GAAeA,EAAYC,gBAE7BpB,EAASoB,cAAe0E,UAAY,GACpC3E,EAAYC,cAAc8D,SAAQpC,IAChC,MAAMqC,EAAKjF,SAASQ,cAAc,MAClCyE,EAAGN,YAAc,GAAG1D,EAAYqC,aAAaV,IAC7C9C,EAASoB,cAAeiB,YAAY8C,EAAA,IAG1C,CAwCA3C,eAAe0D,EAAmB7B,GAChC,MAAMf,QARVd,eAAiC6B,GAG7B,aAFoB5B,KACM8B,MAAMjB,GAASA,EAAKE,WAAaa,KACrC,IACxB,CAIqB8B,CAAkB9B,GACrC,IAAKf,EACH,MAAM,IAAIT,MAAM,mBAElB7C,EAAS+B,kBAAmBI,MAAMC,QAAU,OAC5CpC,EAAS8B,cAAeK,MAAMC,QAAU,QACxCpC,EAAS8B,cAAeN,cAAc,aAAcqD,YAAcvB,EAAKE,SACvExD,EAAS8B,cAAeN,cAAc,gBAAiB4E,aAAa,MAAO9C,EAAK+C,kBAClF,CA2BF7D,eAAe8D,IACX,MAAM9C,EAAWxD,EAASM,cAAemE,MAAMC,OACzCC,EAAW3E,EAASO,cAAekE,MAAMC,OAE/C,GAAIlB,GAAYmB,EACZ,IACI,MAEMC,SAFcnC,KAEI8B,MAAMjB,GAASA,EAAKE,WAAaA,GAAYF,EAAKqB,WAAaA,IAEnFC,SACMR,EAAWQ,EAAUpB,UAC3BxD,EAASW,wBAAwBmF,UAAY,6BAC7C9F,EAASe,KAAKsB,YAAYrC,EAASW,yBACnCoF,YAAW,KACP/F,EAASW,wBAAwBqF,QAAM,GACxC,KAGHhG,EAASM,cAAemE,MAAQ,GAChCzE,EAASO,cAAekE,MAAQ,GAChCzE,EAASkB,UAAUiB,MAAMC,QAAU,OACnCpC,EAASiB,UAAUkB,MAAMC,QAAU,UAEnCpC,EAASY,mBAAmBkF,UAAY,yDACxC9F,EAASe,KAAKsB,YAAYrC,EAASY,oBACnCmF,YAAW,KACP/F,EAASY,mBAAmBoF,QAAM,GACnC,KAEX,CAAE,MAAO5C,GACLc,QAAQC,IAAIf,GACZpD,EAASY,mBAAmBkF,UAAY,oCACxC9F,EAASe,KAAKsB,YAAYrC,EAASY,oBACnCmF,YAAW,KACP/F,EAASY,mBAAmBoF,QAAM,GACnC,IACP,MAEAhG,EAASS,aAAaqF,UAAY,wCAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IAEX,CAKA,SAASO,IACLrC,QAAQC,IAAI,0BAA2BnE,EAASI,qBAChD8D,QAAQC,IAAI,kBAAmBnE,EAASK,cACxC6D,QAAQC,IAAI,0BAA2BnE,EAAS2B,qBAChDuC,QAAQC,IAAI,kBAAmBnE,EAASiC,cAExCjC,EAASI,oBAAqBqF,iBAAiB,SAAS,MA/S5DjD,iBACI,MAAMgB,EAAWxD,EAASM,cAAemE,MAAMC,OACzCC,EAAW3E,EAASO,cAAekE,MAAMC,OACzC8B,EAAgBxG,EAASC,eAAgBwE,MAAMC,OAErD,GAAIlB,GAAYmB,GAAY6B,EAAe,CACvC,MACMC,SADchE,KACKiE,MAAKpD,GAAQA,EAAKE,WAAaA,IAElDM,EAAoB,CACtBN,SAAUA,EACVmB,SAAUA,EACV7B,OAAQ,GACR6D,SAAUH,EACV1C,SAAU2C,EACVrF,cAAe,IAGnB,UACUiC,EAASS,GACf9D,EAASgB,eAAe8E,UAAY,mBACpC9F,EAASe,KAAKsB,YAAYrC,EAASgB,gBACnC+E,YAAW,KACP/F,EAASgB,eAAegF,QAAM,GAC/B,IACP,CAAE,MAAO5C,GACLc,QAAQC,IAAIf,GACZpD,EAASS,aAAaqF,UAAY,uCAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IACP,CACJ,MACIhG,EAASS,aAAaqF,UAAY,6BAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IAEX,CAwQQY,EAAA,IAGJ5G,EAASK,aAAcoF,iBAAiB,SAAUC,IAC9CA,EAAMC,iBACNnB,GAAA,IAGJxE,EAAS2B,oBAAqB8D,iBAAiB,SAAS,KACpDa,GAAA,IAGJtG,EAASiC,aAAcwD,iBAAiB,SAAUC,IAC9CA,EAAMC,iBA3IdnD,iBACI0B,QAAQC,IAAI,0BACZ,MAAMyB,EAAY,CACdiB,KAAM7G,EAAS4B,YAAa6C,MAAMC,OAClCoC,WAAW,IAAIC,MAAOC,eAG1B,GAAIpB,EAAUiB,KAAM,CAChB,MAAM1F,QAAoBmD,IACtBnD,IACAA,EAAYC,cAAgBD,EAAYC,eAAiB,GACzDD,EAAYC,cAAcyE,KAAKD,EAAUiB,MACzC1F,EAAY2C,SAAU,QAChBT,EAASlC,GACfnB,EAAS4B,YAAa6C,MAAQ,GAC9BM,IAER,MACI/E,EAASS,aAAaqF,UAAY,gCAClC9F,EAASe,KAAKsB,YAAYrC,EAASS,cACnCsF,YAAW,KACP/F,EAASS,aAAauF,QAAM,GAC7B,IAEX,CAoHQiB,EAAA,GAER,EAIAzE,iBACItC,SAASuF,iBAAiB,oBAAoBjD,UAC1C+D,UAxGN/D,iBACE,IACE,MAAM0E,QAAiBzE,IACjB0E,EAAWjH,SAASQ,cAAc,MACxCwG,EAAShC,SAAS5B,IAChB,MAAMxC,EAAWZ,SAASQ,cAAc,MACxCI,EAAS+D,YAAcvB,EAAKE,SAC5B1C,EAAS2E,iBAAiB,SAAS,KACjCS,EAAmB5C,EAAKE,SAAQ,IAElC2D,EAAS9E,YAAYvB,EAAA,IAEnBd,EAASkC,eACXlC,EAASkC,aAAa4D,UAAY,GAClC9F,EAASkC,aAAaG,YAAY8E,GAEtC,CAAE,MAAO/D,GACPc,QAAQC,IAAIf,EAAIgE,QAClB,CACF,CAsFYC,EAAA,GAEd,CAEAC","sources":["src/modules/domElements.ts","src/modules/api.ts","src/modules/app.ts"],"sourcesContent":["export const elements = {\n    imageSelection: document.getElementById(\"image-selection\") as HTMLSelectElement | null,\n    createAccountButton: document.getElementById(\"create-account-button\") as HTMLButtonElement | null,\n    submitButton: document.getElementById(\"submit-button\") as HTMLButtonElement | null,\n    usernameInput: document.getElementById(\"username\") as HTMLInputElement | null,\n    passwordInput: document.getElementById(\"password\") as HTMLInputElement | null,\n    form: document.getElementById(\"form\") as HTMLFormElement,\n    errorMessage: document.createElement(\"p\"),\n    userDeletedSuccessfully: document.createElement('h1'),\n    failedToDeleteUser: document.createElement('h1'),\n    messageInput: document.createElement('input'),\n    listItem: document.createElement(\"li\"),\n    body: document.getElementById('body') as HTMLBodyElement,\n    accountCreated: document.createElement(\"h1\"),\n    logInpage: document.getElementById('logInpage') as HTMLDivElement,\n    container: document.getElementById('container') as HTMLDivElement,\n    currentUser: document.getElementById(\"current-user\") as HTMLHeadingElement | null,\n    statusUpdates: document.getElementById(\"status-updates\") as HTMLUListElement | null,\n    newStatusUpdate: document.getElementById(\"new-status-update\") as HTMLInputElement | null,\n    addStatusUpdate: document.getElementById(\"add-status-update\") as HTMLButtonElement | null,\n    loggedInUsersList: document.querySelector('.js-logged-in-users-list') as HTMLElement,\n    otherUserPageHeader: document.querySelector('.js-other-user-page-header') as HTMLHeadingElement | null,\n    deleteAccount: document.getElementById(\"delete-account\") as HTMLButtonElement | null,\n    deleteAccountButton: document.getElementById(\"delete-account-button\") as HTMLButtonElement | null,\n    statusInput: document.getElementById(\"status-input\") as HTMLInputElement | null,\n    statusUpdateButton: document.getElementById(\"status-update-button\") as HTMLButtonElement | null,\n    otherUserPage: document.getElementById(\"other-user-page\") as HTMLDivElement | null,\n    loggedInUsersPage: document.getElementById(\"logged-in-users-page\") as HTMLDivElement | null,\n    statusUpdatesList: document.getElementById(\"status-updates-list\") as HTMLUListElement | null,\n    submitStatus: document.getElementById(\"submit-status\") as HTMLButtonElement,\n    allUsersList: document.getElementById(\"allUsersList\") as HTMLUListElement,\n   \n};\n\n\n\n\n\n\nif (elements.logInpage) {\n    elements.logInpage.style.display = \"block\";\n}\n\nelements.container.style.display = \"none\";\nelements.body.appendChild(elements.container);\n\n\nconst errorMessage = document.createElement(\"div\");\nerrorMessage.className = \"error-message\";\n","import { UserInfo, FirebaseResponse } from './interfaces';\n\nconst baseUrl = \"https://social-media-68d76-default-rtdb.europe-west1.firebasedatabase.app/\";\n\nexport async function getUsers(): Promise<UserInfo[]> {\n    try {\n      const response = await fetch(`${baseUrl}users.json`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const users: FirebaseResponse | null = await response.json();\n      if (!users) {\n        return [];\n      }\n      const usersArray: UserInfo[] = Object.values(users);\n      return usersArray;\n    } catch (err) {\n      throw new Error(\"Failed to fetch users\");\n    }\n  }\n  \n\nexport async function saveUser(user: UserInfo): Promise<void> {\n    const arrData = await getUsers();\n    const url = `${baseUrl}users/${user.userName}.json`;\n    const init = {\n        method: \"PUT\",\n        body: JSON.stringify(user),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n    };\n\n    try {\n        const response = await fetch(url, init);\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n\n        // If the user has just created their account, update the newUser property to false\n        if (user.newUser === true) {\n            const updatedUser: UserInfo = { ...user, newUser: false };\n            const updatedUrl = `${baseUrl}users/${user.userName}/newUser.json`;\n            const updatedInit = {\n                method: \"PUT\",\n                body: JSON.stringify(false),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                },\n            };\n            const updatedResponse = await fetch(updatedUrl, updatedInit);\n            if (!updatedResponse.ok) {\n                throw new Error(`Error: ${updatedResponse.status} ${updatedResponse.statusText}`);\n            }\n        }\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to save user information.\");\n    }\n}\n\nexport async function deleteUser(username: string): Promise<void> {\n    const url = `${baseUrl}users/${username}.json`;\n    const init = {\n        method: \"DELETE\",\n    };\n\n    try {\n        const response = await fetch(url, init);\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to delete user.\");\n    }\n}\n\nexport async function addStatusUpdate(username: string, statusText: string): Promise<void> {\n    try {\n        const users = await getUsers();\n        const currentUser = users.find((user) => user.userName === username);\n        if (!currentUser) {\n            throw new Error(\"User not found.\");\n        }\n        currentUser.statusUpdates = currentUser.statusUpdates || [];\n        const newStatusUpdate = {\n            text: statusText,\n            username: username,\n        };\n        currentUser.statusUpdates.push(newStatusUpdate);\n        await saveUser(currentUser);\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to add status update.\");\n    }\n}\n\n\n\nexport async function getCurrentUser(): Promise<UserInfo | null> {\n    const users = await getUsers();\n    const currentUser = users.find((user) => user.status === \"logged-in\");\n    return currentUser || null;\n}\n","import { elements} from './domElements';\nimport { UserInfo } from './interfaces';\nimport { getUsers, saveUser, getCurrentUser, deleteUser } from './api';\n\nasync function createUser() {\n    const userName = elements.usernameInput!.value.trim();\n    const password = elements.passwordInput!.value.trim();\n    const selectedImage = elements.imageSelection!.value.trim();\n\n    if (userName && password && selectedImage) {\n        const users = await getUsers();\n        const userExists = users.some(user => user.userName === userName);\n\n        const newUser: UserInfo = {\n            userName: userName,\n            password: password,\n            status: \"\",\n            imageurl: selectedImage,\n            newUser: !userExists,\n            statusUpdates: [],\n        };\n\n        try {\n            await saveUser(newUser);\n            elements.accountCreated.innerHTML = \"Account Created!\";\n            elements.body.appendChild(elements.accountCreated);\n            setTimeout(() => {\n                elements.accountCreated.remove();\n            }, 3000);\n        } catch (err) {\n            console.log(err);\n            elements.errorMessage.innerHTML = \"Failed to create account. Try again.\";\n            elements.body.appendChild(elements.errorMessage);\n            setTimeout(() => {\n                elements.errorMessage.remove();\n            }, 3000);\n        }\n    } else {\n        elements.errorMessage.innerHTML = \"Please fill in all fields.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n            elements.errorMessage.remove();\n        }, 3000);\n    }\n}\n\n\n\nasync function loginUser() {\n    const userName = elements.usernameInput!.value.trim();\n    const password = elements.passwordInput!.value.trim();\n\n    if (userName && password) {\n        try {\n            const users = await getUsers();\n            const foundUser = users.find((user) => user.userName === userName && user.password === password);\n\n            if (foundUser) {\n                foundUser.status = \"logged-in\";\n                await saveUser(foundUser);\n                elements.logInpage.style.display = \"none\";\n                elements.container.style.display = \"block\";\n                if (elements.currentUser) {\n                    elements.currentUser.textContent = `Logged in as: ${foundUser.userName}`;\n                } else {\n                    console.error('elements.currentUser is null');\n                }\n\n                displayStatusUpdates(foundUser);\n                displayLoggedInUsers();\n\n                // Update the h1 element with the logged in user's name\n                const loggedInUserHeader = document.getElementById(\"loggedInUserHeader\");\n                loggedInUserHeader!.textContent = `Logged in as: ${foundUser.userName}`;\n            } else {\n                console.log(elements.errorMessage); // check if this element is null\n                elements.errorMessage.innerHTML = \"Incorrect username or password. Try again.\";\n                elements.body.appendChild(elements.errorMessage);\n                setTimeout(() => {\n                    elements.errorMessage.remove();\n                }, 3000);\n            }\n        } catch (err) {\n            console.log(err);\n            elements.errorMessage.innerHTML = \"Failed to log in. Try again.\";\n            elements.body.appendChild(elements.errorMessage);\n            setTimeout(() => {\n                elements.errorMessage.remove();\n            }, 3000);\n        }\n    } else {\n        elements.errorMessage.innerHTML = \"Please enter a username and password.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n            elements.errorMessage.remove();\n        }, 3000);\n    }\n    \n}\n\n\n\n\n\nasync function displayLoggedInUsers() {\n    const users = await getUsers();\n    const loggedInUsers = users.filter(user => user.status === \"logged-in\");\n\n    loggedInUsers.forEach(user => {\n        const li = document.createElement(\"li\");\n        li.textContent = `${user.userName}:`;\n\n        // Create the form for status updates\n        const form = document.createElement(\"form\");\n        const input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.placeholder = \"What's on your mind?\";\n        form.appendChild(input);\n\n        const button = document.createElement(\"button\");\n        button.type = \"submit\";\n        button.textContent = \"Submit\";\n        button.id = \"statusUpdateButton\";\n        form.appendChild(button);\n\n\n\n        form.addEventListener(\"submit\", async (event) => {\n            event.preventDefault();\n\n            const newStatus = input.value.trim();\n            if (newStatus) {\n                user.statusUpdates = user.statusUpdates || [];\n                user.statusUpdates.push(newStatus);\n                user.newUser = false;\n                await saveUser(user);\n\n                const li = document.createElement(\"li\");\n                li.textContent = `${user.userName}: ${newStatus}`;\n                elements.statusUpdates!.appendChild(li);\n\n                input.value = \"\";\n            } else {\n                elements.errorMessage.innerHTML = \"Please enter a status update.\";\n                elements.body.appendChild(elements.errorMessage);\n                setTimeout(() => {\n                    elements.errorMessage.remove();\n                }, 3000);\n            }\n        });\n\n\n        li.appendChild(form);\n\n        // Check that the element exists before appending the child element\n        if (elements.loggedInUsersList) {\n            elements.loggedInUsersList.appendChild(li);\n        }\n    });\n}\n\n\n\n\nasync function displayStatusUpdates() {\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.statusUpdates) {\n      // Clear the status updates container before appending new updates\n      elements.statusUpdates!.innerHTML = '';\n      currentUser.statusUpdates.forEach(status => {\n        const li = document.createElement(\"li\");\n        li.textContent = `${currentUser.userName}: ${status}`;\n        elements.statusUpdates!.appendChild(li);\n      });\n    }\n  }\n  \n\n\n\n\n\nasync function addStatusUpdate() {\n    console.log('addStatusUpdate called'); // Add this line\n    const newStatus = {\n        text: elements.statusInput!.value.trim(),\n        timestamp: new Date().toISOString(),\n    };\n\n    if (newStatus.text) {\n        const currentUser = await getCurrentUser();\n        if (currentUser) {\n            currentUser.statusUpdates = currentUser.statusUpdates || [];\n            currentUser.statusUpdates.push(newStatus.text); // push the text property of newStatus\n            currentUser.newUser = false;\n            await saveUser(currentUser);\n            elements.statusInput!.value = \"\";\n            displayStatusUpdates(currentUser);\n        }\n    } else {\n        elements.errorMessage.innerHTML = \"Please enter a status update.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n            elements.errorMessage.remove();\n        }, 3000);\n    }\n}\n\nasync function getUserByUsername(username: string): Promise<UserInfo | null> {\n    const users = await getUsers();\n    const currentUser = users.find((user) => user.userName === username);\n    return currentUser || null;\n  }\n  \n  \n  async function visitOtherUserPage(username: string): Promise<void> {\n    const user = await getUserByUsername(username);\n    if (!user) {\n      throw new Error(\"User not found.\");\n    }\n    elements.loggedInUsersPage!.style.display = \"none\";\n    elements.otherUserPage!.style.display = \"block\";\n    elements.otherUserPage!.querySelector(\".username\")!.textContent = user.userName;\n    elements.otherUserPage!.querySelector(\".profile-pic\")!.setAttribute(\"src\", user.profilePictureUrl);\n  }\n  \n  async function displayAllUsers() {\n    try {\n      const allUsers = await getUsers();\n      const userList = document.createElement(\"ul\");\n      allUsers.forEach((user) => {\n        const listItem = document.createElement(\"li\");\n        listItem.textContent = user.userName;\n        listItem.addEventListener(\"click\", () => {\n          visitOtherUserPage(user.userName);\n        });\n        userList.appendChild(listItem);\n      });\n      if (elements.allUsersList) {\n        elements.allUsersList.innerHTML = \"\";\n        elements.allUsersList.appendChild(userList);\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n  \n  \n\n\n\nasync function deleteCurrentUser() {\n    const userName = elements.usernameInput!.value.trim();\n    const password = elements.passwordInput!.value.trim();\n\n    if (userName && password) {\n        try {\n            const users = await getUsers();\n\n            const foundUser = users.find((user) => user.userName === userName && user.password === password);\n\n            if (foundUser) {\n                await deleteUser(foundUser.userName);\n                elements.userDeletedSuccessfully.innerHTML = \"User deleted successfully!\";\n                elements.body.appendChild(elements.userDeletedSuccessfully);\n                setTimeout(() => {\n                    elements.userDeletedSuccessfully.remove();\n                }, 3000);\n\n                // Reset the input fields and navigate back to the login page\n                elements.usernameInput!.value = '';\n                elements.passwordInput!.value = '';\n                elements.container.style.display = \"none\";\n                elements.logInpage.style.display = \"block\";\n            } else {\n                elements.failedToDeleteUser.innerHTML = \"Failed to delete user. Incorrect username or password.\";\n                elements.body.appendChild(elements.failedToDeleteUser);\n                setTimeout(() => {\n                    elements.failedToDeleteUser.remove();\n                }, 3000);\n            }\n        } catch (err) {\n            console.log(err);\n            elements.failedToDeleteUser.innerHTML = \"Failed to delete user. Try again.\";\n            elements.body.appendChild(elements.failedToDeleteUser);\n            setTimeout(() => {\n                elements.failedToDeleteUser.remove();\n            }, 3000);\n        }\n    } else {\n        elements.errorMessage.innerHTML = \"Please enter a username and password.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n            elements.errorMessage.remove();\n        }, 3000);\n    }\n}\n\n\n\n\nfunction setupEventListeners() {\n    console.log(\"Create Account Button: \", elements.createAccountButton);\n    console.log(\"Submit Button: \", elements.submitButton);\n    console.log(\"Delete Account Button: \", elements.deleteAccountButton);\n    console.log(\"Submit Status: \", elements.submitStatus);\n\n    elements.createAccountButton!.addEventListener(\"click\", () => {\n        createUser();\n    });\n\n    elements.submitButton!.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        loginUser();\n    });\n\n    elements.deleteAccountButton!.addEventListener(\"click\", () => {\n        deleteCurrentUser();\n    });\n\n    elements.submitStatus!.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        addStatusUpdate();\n    });\n}\n\n\n\nasync function init() {\n    document.addEventListener('DOMContentLoaded', async () => {\n        setupEventListeners();\n        await displayAllUsers(); \n    });\n}\n\ninit();\n\n"],"names":["$180a3ec4d9117066$export$7a5d735b2ab6389d","imageSelection","document","getElementById","createAccountButton","submitButton","usernameInput","passwordInput","form","errorMessage","createElement","userDeletedSuccessfully","failedToDeleteUser","messageInput","listItem","body","accountCreated","logInpage","container","currentUser","statusUpdates","newStatusUpdate","addStatusUpdate","loggedInUsersList","querySelector","otherUserPageHeader","deleteAccount","deleteAccountButton","statusInput","statusUpdateButton","otherUserPage","loggedInUsersPage","statusUpdatesList","submitStatus","allUsersList","style","display","appendChild","className","$fe11eb32f95cc6d1$var$baseUrl","async","$fe11eb32f95cc6d1$export$925a4945a6cd0f3e","response","fetch","ok","Error","status","statusText","users","json","Object","values","err","$fe11eb32f95cc6d1$export$ca0e1882e225378b","user","url","userName","init","method","JSON","stringify","headers","newUser","updatedUrl","updatedInit","updatedResponse","console","log","$fe11eb32f95cc6d1$export$7d0f10f273c0438a","username","$fe11eb32f95cc6d1$export$e5432d4c8eb97ea7","find","$afc4fdb57cd652c4$var$loginUser","value","trim","password","foundUser","textContent","error","$afc4fdb57cd652c4$var$displayStatusUpdates","loggedInUsers","filter","forEach","li","input","type","placeholder","button","id","addEventListener","event","preventDefault","newStatus","push","innerHTML","setTimeout","remove","$afc4fdb57cd652c4$var$displayLoggedInUsers","$afc4fdb57cd652c4$var$visitOtherUserPage","$afc4fdb57cd652c4$var$getUserByUsername","setAttribute","profilePictureUrl","$afc4fdb57cd652c4$var$deleteCurrentUser","$afc4fdb57cd652c4$var$setupEventListeners","selectedImage","userExists","some","imageurl","$afc4fdb57cd652c4$var$createUser","text","timestamp","Date","toISOString","$afc4fdb57cd652c4$var$addStatusUpdate","allUsers","userList","message","$afc4fdb57cd652c4$var$displayAllUsers","$afc4fdb57cd652c4$var$init"],"version":3,"file":"index.731de68b.js.map"}