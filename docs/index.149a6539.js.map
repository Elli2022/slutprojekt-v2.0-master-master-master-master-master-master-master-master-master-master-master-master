{"mappings":"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","sources":["src/modules/domElements.ts","src/modules/api.ts","src/modules/app.ts"],"sourcesContent":["export const elements = {\n    imageSelection: document.getElementById(\"image-selection\") as HTMLSelectElement | null,\n    createAccountButton: document.getElementById(\"create-account-button\") as HTMLButtonElement | null,\n    submitButton: document.getElementById(\"submit-button\") as HTMLButtonElement | null,\n    usernameInput: document.getElementById(\"username\") as HTMLInputElement | null,\n    passwordInput: document.getElementById(\"password\") as HTMLInputElement | null,\n    form: document.getElementById(\"form\") as HTMLFormElement,\n    errorMessage: document.createElement(\"p\"),\n    userDeletedSuccessfully: document.createElement('h1'),\n    failedToDeleteUser: document.createElement('h1'),\n    messageInput: document.createElement('input'),\n    listItem: document.createElement(\"li\"),\n    body: document.getElementById('body') as HTMLBodyElement,\n    accountCreated: document.createElement(\"h1\"),\n    logInpage: document.getElementById('logInpage') as HTMLDivElement,\n    container: document.getElementById('container') as HTMLDivElement,\n    currentUser: document.getElementById(\"current-user\") as HTMLHeadingElement | null,\n    statusUpdates: document.getElementById(\"status-updates\") as HTMLUListElement | null,\n    newStatusUpdate: document.getElementById(\"new-status-update\") as HTMLInputElement | null,\n    addStatusUpdate: document.getElementById(\"add-status-update\") as HTMLButtonElement | null,\n    loggedInUsersList: document.querySelector('.js-logged-in-users-list') as HTMLElement,\n    otherUserPageHeader: document.querySelector('.js-other-user-page-header') as HTMLHeadingElement | null,\n    deleteAccount: document.getElementById(\"delete-account\") as HTMLButtonElement | null,\n    deleteAccountButton: document.getElementById(\"delete-account-button\") as HTMLButtonElement | null,\n    statusInput: document.getElementById(\"status-input\") as HTMLInputElement | null,\n    statusUpdateButton: document.getElementById(\"status-update-button\") as HTMLButtonElement | null,\n    otherUserPage: document.getElementById(\"other-user-page\") as HTMLElement,\n    loggedInUsersPage: document.getElementById(\"logged-in-users-page\") as HTMLDivElement | null,\n    statusUpdatesList: document.getElementById(\"status-updates-list\") as HTMLUListElement | null,\n    submitStatus: document.getElementById(\"submit-status\") as HTMLButtonElement,\n    allUsersList: document.getElementById(\"allUsersList\") as HTMLUListElement,\n    userStatus: document.getElementById('userStatus') as HTMLElement,    \n    \n};\n\n\n\n\n\n\nif (elements.logInpage) {\n    elements.logInpage.style.display = \"block\";\n}\n\nelements.container.style.display = \"none\";\nelements.body.appendChild(elements.container);\n\n\nconst errorMessage = document.createElement(\"div\");\nerrorMessage.className = \"error-message\";\n","import { UserInfo, FirebaseResponse } from './interfaces';\n\nconst baseUrl = \"https://social-media-68d76-default-rtdb.europe-west1.firebasedatabase.app/\";\n\nexport async function getUsers(): Promise<UserInfo[]> {\n    try {\n      const response = await fetch(`${baseUrl}users.json`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const users: FirebaseResponse | null = await response.json();\n      if (!users) {\n        return [];\n      }\n      const usersArray: UserInfo[] = Object.values(users);\n      return usersArray;\n    } catch (err) {\n      throw new Error(\"Failed to fetch users\");\n    }\n  }\n  \n\n  export async function saveUser(user: UserInfo): Promise<void> {\n    const arrData = await getUsers();\n    const url = `${baseUrl}users/${user.userName}.json`;\n    const init = {\n      method: \"PUT\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    };\n  \n    try {\n      const response = await fetch(url, init);\n  \n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n  \n    } catch (err) {\n      console.log(err);\n      throw new Error(\"Failed to save user information.\");\n    }\n  }\n  \n\n\nexport async function deleteUser(username: string): Promise<void> {\n    const url = `${baseUrl}users/${username}.json`;\n    const init = {\n        method: \"DELETE\",\n    };\n\n    try {\n        const response = await fetch(url, init);\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to delete user.\");\n    }\n}\n\nexport async function addStatusUpdate(newStatus: string): Promise<void> {\n  const currentUser = await getLoggedInUser(); // Use getLoggedInUser() instead of getCurrentUser()\n  if (!currentUser) {\n    throw new Error(\"User not found.\");\n  }\n\n  currentUser.status = newStatus;\n\n  const url = `${baseUrl}users/${currentUser.userName}.json`;\n  const init = {\n    method: \"PUT\",\n    body: JSON.stringify(currentUser),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  try {\n    const response = await fetch(url, init);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status} ${response.statusText}`);\n    }\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to add status update.\");\n  }\n}\n\n\nexport async function getCurrentUser(): Promise<UserInfo | null> {\n  const loggedInUserName = localStorage.getItem(\"loggedInUser\");\n  if (loggedInUserName) {\n    return await getUserByUsername(loggedInUserName);\n  }\n  return null;\n}\n\n// Export getUserByUsername function\nexport async function getUserByUsername(username: string): Promise<UserInfo | null> {\n  const users = await getUsers();\n  const currentUser = users.find((user) => user.userName === username);\n  return currentUser || null;\n}\n\n\nexport async function getLoggedInUser(): Promise<UserInfo | null> {\n  const loggedInUserName = localStorage.getItem(\"loggedInUser\");\n  if (loggedInUserName) {\n    return await getUserByUsername(loggedInUserName);\n  }\n  return null;\n}\n\n  ","import { elements } from './domElements';\nimport { UserInfo } from './interfaces';\nimport { getUsers, saveUser, getCurrentUser, deleteUser, getUserByUsername } from './api';\nimport { getLoggedInUser as loggedInUser } from './api';\n\nasync function createUser() {\n  const userName = elements.usernameInput!.value.trim();\n  const password = elements.passwordInput!.value.trim();\n  const selectedImage = elements.imageSelection!.value.trim();\n\n  if (userName && password && selectedImage) {\n    const users = await getUsers();\n    const userExists = users.some(user => user.userName === userName);\n\n    const newUser: UserInfo = {\n      userName: userName,\n      password: password,\n      status: \"\",\n      imageurl: selectedImage,\n      newUser: true, // Setting newUser to true when creating a new account\n      statusUpdates: [],\n    };\n\n\n    try {\n      await saveUser(newUser);\n      elements.accountCreated.innerHTML = \"Account Created!\";\n      elements.body.appendChild(elements.accountCreated);\n      setTimeout(() => {\n        elements.accountCreated.remove();\n      }, 3000);\n    } catch (err) {\n      console.log(err);\n      elements.errorMessage.innerHTML = \"Failed to create account. Try again.\";\n      elements.body.appendChild(elements.errorMessage);\n      setTimeout(() => {\n        elements.errorMessage.remove();\n      }, 3000);\n    }\n  } else {\n    elements.errorMessage.innerHTML = \"Please fill in all fields.\";\n    elements.body.appendChild(elements.errorMessage);\n    setTimeout(() => {\n      elements.errorMessage.remove();\n    }, 3000);\n  }\n}\n\n\nasync function loginUser() {\n  const userName = elements.usernameInput!.value.trim();\n  const password = elements.passwordInput!.value.trim();\n\n  if (userName && password) {\n    try {\n      const users = await getUsers();\n      const foundUser = users.find((user) => user.userName === userName && user.password === password);\n\n      if (foundUser) {\n        foundUser.newUser = false; // Set newUser to false when user logs in\n        foundUser.status = \"logged-in\"; // Set the user's status to \"logged-in\"\n        await saveUser(foundUser);\n        localStorage.setItem(\"loggedInUser\", foundUser.userName);\n        elements.allUsersList.style.display = \"block\";\n        elements.logInpage.style.display = \"none\";\n        elements.container.style.display = \"block\";\n        if (elements.currentUser) {\n          elements.currentUser.textContent = `Logged in as: ${foundUser.userName}`;\n        } else {\n          console.error('elements.currentUser is null');\n        }\n\n        displayLoggedInUsers();\n        displayUserStatus();\n\n        const loggedInUserHeader = document.getElementById(\"loggedInUserHeader\");\n        loggedInUserHeader!.textContent = `Logged in as: ${foundUser.userName}`;\n      } else {\n        elements.errorMessage.innerHTML = \"Incorrect username or password. Try again.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n          elements.errorMessage.remove();\n        }, 3000);\n      }\n    } catch (err) {\n      console.log(err);\n      elements.errorMessage.innerHTML = \"Failed to log in. Try again.\";\n      elements.body.appendChild(elements.errorMessage);\n      setTimeout(() => {\n        elements.errorMessage.remove();\n      }, 3000);\n    }\n  } else {\n    elements.errorMessage.innerHTML = \"Please enter a username and password.\";\n    elements.body.appendChild(elements.errorMessage);\n    setTimeout(() => {\n      elements.errorMessage.remove();\n    }, 3000);\n  }\n  document.getElementById(\"backButton\")!.style.display = \"block\";\n  document.getElementById(\"delete-account-button\")!.style.display = \"block\";\n\n}\n\nasync function displayUserStatus() {\n  const currentUser = await getCurrentUser();\n  if (currentUser) {\n    elements.userStatus!.textContent = `${currentUser.userName}'s status: ${currentUser.status}`;\n  }\n}\n\nasync function addStatusUpdate() {\n  const newStatus = elements.statusInput!.value.trim();\n\n  if (newStatus) {\n    try {\n      const currentUser = await getCurrentUser();\n      if (currentUser) {\n        if (!currentUser.statusUpdates) {\n          currentUser.statusUpdates = [];\n        }\n        const timestamp = new Date().toISOString();\n        currentUser.statusUpdates.push({ status: newStatus, timestamp: timestamp });\n        await saveUser(currentUser);\n        elements.statusInput!.value = \"\";\n        // displayStatusUpdates();\n        displayAllUsers();\n      } else {\n        elements.errorMessage.innerHTML = \"Failed to find the current user.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n          elements.errorMessage.remove();\n        }, 3000);\n      }\n    } catch (err) {\n      console.log(err);\n      elements.errorMessage.innerHTML = \"Failed to update status. Try again.\";\n      elements.body.appendChild(elements.errorMessage);\n      setTimeout(() => {\n        elements.errorMessage.remove();\n      }, 3000);\n    }\n  } else {\n    elements.errorMessage.innerHTML = \"Please enter a status update.\";\n    elements.body.appendChild(elements.errorMessage);\n    setTimeout(() => {\n      elements.errorMessage.remove();\n    }, 3000);\n  }\n}\n\nasync function displayLoggedInUsers() {\n  const users = await getUsers();\n  const currentUser = await getCurrentUser();\n\n  users.forEach(user => {\n    const li = document.createElement(\"li\");\n    li.textContent = `${user.userName}:`;\n\n    // Check that the element exists before appending the child element\n    if (elements.loggedInUsersList) {\n      elements.loggedInUsersList.appendChild(li);\n    }\n  });\n}\n\nasync function displayAllUsers() {\n  try {\n    const allUsers = await getUsers();\n    const userList = document.createElement(\"ul\");\n    allUsers.forEach((user) => {\n      const listItem = document.createElement(\"li\");\n      listItem.classList.add(\"user-item\");\n      const latestStatus = user.statusUpdates ? user.statusUpdates.slice(-1)[0] || '' : '';\n      const date = latestStatus.timestamp ? new Date(latestStatus.timestamp) : null;\n      const formattedDate = date ? `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}` : '';\n\n      const userImage = document.createElement('img');\n      userImage.src = user.imageurl;\n      userImage.width = 50; // Adjust the width as needed\n      userImage.height = 50; // Adjust the height as needed\n      userImage.style.marginRight = '5px';\n\n      const userNameText = document.createTextNode(`${user.userName} - Last status: ${latestStatus.status} ${formattedDate ? `(${formattedDate})` : ''}`);\n\n      listItem.appendChild(userImage);\n      listItem.appendChild(userNameText);\n\n      listItem.addEventListener(\"click\", () => {\n        visitOtherUserPage(user.userName);\n      });\n      userList.appendChild(listItem);\n    });\n    if (elements.allUsersList) {\n      elements.allUsersList.innerHTML = \"\";\n      elements.allUsersList.appendChild(userList);\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n\n\n\nasync function visitOtherUserPage(username: string): Promise<void> {\n  const user = await getUserByUsername(username);\n  if (!user) {\n    throw new Error(\"User not found.\");\n  }\n\n  const loggedInUsersPage = document.getElementById(\"container\");\n  const otherUserPage = document.getElementById(\"otherUserPage\");\n\n  if (loggedInUsersPage && otherUserPage) {\n    loggedInUsersPage.style.display = \"none\";\n    otherUserPage.style.display = \"block\";\n    otherUserPage.querySelector(\".username\")!.textContent = user.userName;\n    otherUserPage.querySelector(\".profile-pic\")!.setAttribute(\"src\", user.imageurl);\n\n    // Display all status updates in descending order\n    const statusUpdatesContainer = otherUserPage.querySelector(\".status-updates\");\n    if (statusUpdatesContainer) {\n      statusUpdatesContainer.innerHTML = \"\"; // Clear previous status updates\n      user.statusUpdates.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()); // Sort by descending timestamp\n      user.statusUpdates.forEach((statusUpdate) => {\n        const statusElement = document.createElement(\"p\");\n        const date = new Date(statusUpdate.timestamp);\n        const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n        statusElement.textContent = `${formattedDate}: ${statusUpdate.status}`;\n        statusUpdatesContainer.appendChild(statusElement);\n      });\n    } else {\n      console.error(\"Error: statusUpdatesContainer element is missing.\");\n    }\n  } else {\n    console.error(\"Error: loggedInUsersPage or otherUserPage element is missing.\");\n  }\n}\n\nfunction goBackToMainView() {\n  const loggedInUsersPage = document.getElementById(\"container\");\n  const otherUserPage = document.getElementById(\"otherUserPage\");\n\n  if (loggedInUsersPage && otherUserPage) {\n    loggedInUsersPage.style.display = \"block\";\n    otherUserPage.style.display = \"none\";\n\n    // Show the userListWrapper when returning to the main view\n    const userListWrapper = document.getElementById(\"userListWrapper\");\n    if (userListWrapper) {\n      userListWrapper.style.display = \"block\";\n    }\n  } else {\n    console.error(\"Error: loggedInUsersPage or otherUserPage element is missing.\");\n  }\n}\n\nasync function redirectToLogin() {\n  await logoutAndUpdateStatus();\n  window.location.href = \"/\"; // Assuming your login page is at the root URL\n}\n\ndocument.getElementById(\"logoutButton\")?.addEventListener(\"click\", redirectToLogin);\n\nasync function logoutAndUpdateStatus() {\n  const currentUser = await getCurrentUser();\n  if (currentUser) {\n    currentUser.status = \"logged-out\";\n    await saveUser(currentUser);\n  }\n  localStorage.removeItem(\"loggedInUser\");\n}\n\nasync function deleteCurrentUser() {\n  const userName = elements.usernameInput!.value.trim();\n  const password = elements.passwordInput!.value.trim();\n\n  if (userName && password) {\n    try {\n      const users = await getUsers();\n\n      const foundUser = users.find((user) => user.userName === userName && user.password === password);\n\n      if (foundUser) {\n        await deleteUser(foundUser.userName);\n        localStorage.removeItem(\"loggedInUser\");\n        elements.userDeletedSuccessfully.innerHTML = \"User deleted successfully!\";\n        elements.body.appendChild(elements.userDeletedSuccessfully);\n        setTimeout(() => {\n          elements.userDeletedSuccessfully.remove();\n        }, 3000);\n\n        // Reset the input fields and navigate back to the login page\n        elements.usernameInput!.value = '';\n        elements.passwordInput!.value = '';\n        elements.container.style.display = \"none\";\n        elements.logInpage.style.display = \"block\";\n\n        // Update the list of users and their status updates after deleting the user\n        await displayAllUsers();\n\n      } else {\n        elements.failedToDeleteUser.innerHTML = \"Failed to delete user. Incorrect username or password.\";\n        elements.body.appendChild(elements.failedToDeleteUser);\n        setTimeout(() => {\n          elements.failedToDeleteUser.remove();\n        }, 3000);\n      }\n    } catch (err) {\n      console.log(err);\n      elements.failedToDeleteUser.innerHTML = \"Failed to delete user. Try again.\";\n      elements.body.appendChild(elements.failedToDeleteUser);\n      setTimeout(() => {\n        elements.failedToDeleteUser.remove();\n      }, 3000);\n    }\n  } else {\n    elements.errorMessage.innerHTML = \"Please enter a username and password.\";\n    elements.body.appendChild(elements.errorMessage);\n    setTimeout(() => {\n      elements.errorMessage.remove();\n    }, 3000);\n  }\n\n  // Navigate back to the login page\n  elements.container.style.display = \"none\";\n  elements.logInpage.style.display = \"block\";\n}\n\n\nfunction setupEventListeners() {\n  console.log(\"Create Account Button: \", elements.createAccountButton);\n  console.log(\"Submit Button: \", elements.submitButton);\n  console.log(\"Delete Account Button: \", elements.deleteAccountButton);\n  console.log(\"Submit Status: \", elements.submitStatus);\n\n  elements.createAccountButton!.addEventListener(\"click\", () => {\n    createUser();\n  });\n\n  elements.submitButton!.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    loginUser();\n  });\n\n  elements.deleteAccountButton!.addEventListener(\"click\", () => {\n    deleteCurrentUser();\n  });\n\n  elements.submitStatus!.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    addStatusUpdate();\n  });\n  const backButton = document.getElementById(\"backButton\");\n  if (backButton) {\n    backButton.addEventListener(\"click\", goBackToMainView);\n  } else {\n    console.error(\"Error: backButton element is missing.\");\n  }\n}\n\nasync function init() {\n  document.addEventListener('DOMContentLoaded', async () => {\n    setupEventListeners();\n    await displayAllUsers();\n  });\n}\n\ninit();\n\n"],"names":["$180a3ec4d9117066$export$7a5d735b2ab6389d","imageSelection","document","getElementById","createAccountButton","submitButton","usernameInput","passwordInput","form","errorMessage","createElement","userDeletedSuccessfully","failedToDeleteUser","messageInput","listItem","body","accountCreated","logInpage","container","currentUser","statusUpdates","newStatusUpdate","addStatusUpdate","loggedInUsersList","querySelector","otherUserPageHeader","deleteAccount","deleteAccountButton","statusInput","statusUpdateButton","otherUserPage","loggedInUsersPage","statusUpdatesList","submitStatus","allUsersList","userStatus","style","display","appendChild","className","$fe11eb32f95cc6d1$var$baseUrl","async","$fe11eb32f95cc6d1$export$925a4945a6cd0f3e","response","fetch","ok","Error","status","statusText","users","json","Object","values","err","$fe11eb32f95cc6d1$export$ca0e1882e225378b","user","url","userName","init","method","JSON","stringify","headers","console","log","$fe11eb32f95cc6d1$export$7d0f10f273c0438a","username","$fe11eb32f95cc6d1$export$e5432d4c8eb97ea7","loggedInUserName","localStorage","getItem","$fe11eb32f95cc6d1$export$fe689bf0ea1a115a","find","$afc4fdb57cd652c4$var$loginUser","value","trim","password","foundUser","newUser","setItem","textContent","error","forEach","li","$afc4fdb57cd652c4$var$displayLoggedInUsers","$afc4fdb57cd652c4$var$displayUserStatus","innerHTML","setTimeout","remove","$afc4fdb57cd652c4$var$displayAllUsers","allUsers","userList","classList","add","latestStatus","slice","date","timestamp","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","userImage","src","imageurl","width","height","marginRight","userNameText","createTextNode","addEventListener","setAttribute","statusUpdatesContainer","sort","a","b","getTime","statusUpdate","statusElement","$afc4fdb57cd652c4$var$visitOtherUserPage","message","$afc4fdb57cd652c4$var$goBackToMainView","userListWrapper","$afc4fdb57cd652c4$var$deleteCurrentUser","removeItem","$afc4fdb57cd652c4$var$setupEventListeners","selectedImage","some","$afc4fdb57cd652c4$var$createUser","event","preventDefault","newStatus","toISOString","push","$afc4fdb57cd652c4$var$addStatusUpdate","backButton","$afc4fdb57cd652c4$var$logoutAndUpdateStatus","window","location","href","$afc4fdb57cd652c4$var$init"],"version":3,"file":"index.149a6539.js.map"}