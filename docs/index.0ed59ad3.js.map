{"mappings":"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","sources":["src/modules/domElements.ts","src/modules/api.ts","src/modules/app.ts"],"sourcesContent":["export const elements = {\n    imageSelection: document.getElementById(\"image-selection\") as HTMLSelectElement | null,\n    createAccountButton: document.getElementById(\"create-account-button\") as HTMLButtonElement | null,\n    submitButton: document.getElementById(\"submit-button\") as HTMLButtonElement | null,\n    usernameInput: document.getElementById(\"username\") as HTMLInputElement | null,\n    passwordInput: document.getElementById(\"password\") as HTMLInputElement | null,\n    form: document.getElementById(\"form\") as HTMLFormElement,\n    errorMessage: document.createElement(\"p\"),\n    userDeletedSuccessfully: document.createElement('h1'),\n    failedToDeleteUser: document.createElement('h1'),\n    messageInput: document.createElement('input'),\n    listItem: document.createElement(\"li\"),\n    body: document.getElementById('body') as HTMLBodyElement,\n    accountCreated: document.createElement(\"h1\"),\n    logInpage: document.getElementById('logInpage') as HTMLDivElement,\n    container: document.getElementById('container') as HTMLDivElement,\n    currentUser: document.getElementById(\"current-user\") as HTMLHeadingElement | null,\n    statusUpdates: document.getElementById(\"status-updates\") as HTMLUListElement | null,\n    newStatusUpdate: document.getElementById(\"new-status-update\") as HTMLInputElement | null,\n    addStatusUpdate: document.getElementById(\"add-status-update\") as HTMLButtonElement | null,\n    loggedInUsersList: document.querySelector('.js-logged-in-users-list') as HTMLElement,\n    otherUserPageHeader: document.querySelector('.js-other-user-page-header') as HTMLHeadingElement | null,\n    deleteAccount: document.getElementById(\"delete-account\") as HTMLButtonElement | null,\n    deleteAccountButton: document.getElementById(\"delete-account-button\") as HTMLButtonElement | null,\n    statusInput: document.getElementById(\"status-input\") as HTMLInputElement | null,\n    statusUpdateButton: document.getElementById(\"status-update-button\") as HTMLButtonElement | null,\n    otherUserPage: document.getElementById(\"other-user-page\") as HTMLDivElement | null,\n    loggedInUsersPage: document.getElementById(\"logged-in-users-page\") as HTMLDivElement | null,\n    statusUpdatesList: document.getElementById(\"status-updates-list\") as HTMLUListElement | null,\n    submitStatus: document.getElementById(\"submit-status\") as HTMLButtonElement,\n    allUsersList: document.getElementById(\"allUsersList\") as HTMLUListElement,\n    userStatus: document.getElementById('userStatus') as HTMLElement,\n};\n\n\n\n\n\n\nif (elements.logInpage) {\n    elements.logInpage.style.display = \"block\";\n}\n\nelements.container.style.display = \"none\";\nelements.body.appendChild(elements.container);\n\n\nconst errorMessage = document.createElement(\"div\");\nerrorMessage.className = \"error-message\";\n","import { UserInfo, FirebaseResponse } from './interfaces';\n\nconst baseUrl = \"https://social-media-68d76-default-rtdb.europe-west1.firebasedatabase.app/\";\n\nexport async function getUsers(): Promise<UserInfo[]> {\n    try {\n      const response = await fetch(`${baseUrl}users.json`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const users: FirebaseResponse | null = await response.json();\n      if (!users) {\n        return [];\n      }\n      const usersArray: UserInfo[] = Object.values(users);\n      return usersArray;\n    } catch (err) {\n      throw new Error(\"Failed to fetch users\");\n    }\n  }\n  \n\n  export async function saveUser(user: UserInfo): Promise<void> {\n    const arrData = await getUsers();\n    const url = `${baseUrl}users/${user.userName}.json`;\n    const init = {\n      method: \"PUT\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    };\n  \n    try {\n      const response = await fetch(url, init);\n  \n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n  \n    } catch (err) {\n      console.log(err);\n      throw new Error(\"Failed to save user information.\");\n    }\n  }\n  \n\n\nexport async function deleteUser(username: string): Promise<void> {\n    const url = `${baseUrl}users/${username}.json`;\n    const init = {\n        method: \"DELETE\",\n    };\n\n    try {\n        const response = await fetch(url, init);\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to delete user.\");\n    }\n}\n\nexport async function addStatusUpdate(newStatus: string): Promise<void> {\n  const currentUser = await getLoggedInUser(); // Use getLoggedInUser() instead of getCurrentUser()\n  if (!currentUser) {\n    throw new Error(\"User not found.\");\n  }\n\n  currentUser.status = newStatus;\n\n  const url = `${baseUrl}users/${currentUser.userName}.json`;\n  const init = {\n    method: \"PUT\",\n    body: JSON.stringify(currentUser),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n    },\n  };\n\n  try {\n    const response = await fetch(url, init);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status} ${response.statusText}`);\n    }\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"Failed to add status update.\");\n  }\n}\n\n\nexport async function getCurrentUser(): Promise<UserInfo | null> {\n    const users = await getUsers();\n    const currentUser = users.find((user) => user.status === \"logged-in\");\n    return currentUser || null;\n}\n\n// Export getUserByUsername function\nexport async function getUserByUsername(username: string): Promise<UserInfo | null> {\n  const users = await getUsers();\n  const currentUser = users.find((user) => user.userName === username);\n  return currentUser || null;\n}\n\n\nexport async function getLoggedInUser(): Promise<UserInfo | null> {\n  const loggedInUserName = localStorage.getItem(\"loggedInUser\");\n  if (loggedInUserName) {\n    return await getUserByUsername(loggedInUserName);\n  }\n  return null;\n}\n\n  ","import { elements} from './domElements';\nimport { UserInfo } from './interfaces';\nimport {  getUsers, saveUser, getCurrentUser, deleteUser, getUserByUsername  } from './api';\nimport { getLoggedInUser as loggedInUser } from './api';\n\n\n\nasync function createUser() {\n    const userName = elements.usernameInput!.value.trim();\n    const password = elements.passwordInput!.value.trim();\n    const selectedImage = elements.imageSelection!.value.trim();\n\n    if (userName && password && selectedImage) {\n        const users = await getUsers();\n        const userExists = users.some(user => user.userName === userName);\n\n        const newUser: UserInfo = {\n            userName: userName,\n            password: password,\n            status: \"\",\n            imageurl: selectedImage,\n            newUser: true, // Set newUser to true when creating a new account\n            statusUpdates: [],\n        };\n        \n\n        try {\n            await saveUser(newUser);\n            elements.accountCreated.innerHTML = \"Account Created!\";\n            elements.body.appendChild(elements.accountCreated);\n            setTimeout(() => {\n                elements.accountCreated.remove();\n            }, 3000);\n        } catch (err) {\n            console.log(err);\n            elements.errorMessage.innerHTML = \"Failed to create account. Try again.\";\n            elements.body.appendChild(elements.errorMessage);\n            setTimeout(() => {\n                elements.errorMessage.remove();\n            }, 3000);\n        }\n    } else {\n        elements.errorMessage.innerHTML = \"Please fill in all fields.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n            elements.errorMessage.remove();\n        }, 3000);\n    }\n}\n\n\n\nasync function loginUser() {\n    const userName = elements.usernameInput!.value.trim();\n    const password = elements.passwordInput!.value.trim();\n  \n    if (userName && password) {\n      try {\n        const users = await getUsers();\n        const foundUser = users.find((user) => user.userName === userName && user.password === password);\n  \n        if (foundUser) {\n          foundUser.newUser = false; // Set newUser to false when user logs in\n          foundUser.status = \"logged-in\"; // Set the user's status to \"logged-in\"\n          await saveUser(foundUser);\n          localStorage.setItem(\"loggedInUser\", foundUser.userName);\n  \n          elements.logInpage.style.display = \"none\";\n          elements.container.style.display = \"block\";\n  \n          if (elements.currentUser) {\n            elements.currentUser.textContent = `Logged in as: ${foundUser.userName}`;\n          } else {\n            console.error('elements.currentUser is null');\n          }\n  \n          displayStatusUpdates();\n          displayLoggedInUsers();\n          displayUserStatus();\n  \n          const loggedInUserHeader = document.getElementById(\"loggedInUserHeader\");\n          loggedInUserHeader!.textContent = `Logged in as: ${foundUser.userName}`;\n        } else {\n          elements.errorMessage.innerHTML = \"Incorrect username or password. Try again.\";\n          elements.body.appendChild(elements.errorMessage);\n          setTimeout(() => {\n            elements.errorMessage.remove();\n          }, 3000);\n        }\n      } catch (err) {\n        console.log(err);\n        elements.errorMessage.innerHTML = \"Failed to log in. Try again.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n          elements.errorMessage.remove();\n        }, 3000);\n      }\n    } else {\n      elements.errorMessage.innerHTML = \"Please enter a username and password.\";\n      elements.body.appendChild(elements.errorMessage);\n      setTimeout(() => {\n        elements.errorMessage.remove();\n      }, 3000);\n    }\n  }\n  \n  async function displayUserStatus() {\n    const currentUser = await getCurrentUser();\n    if (currentUser) {\n      elements.userStatus!.textContent = `${currentUser.userName}'s status: ${currentUser.status}`;\n    }\n  }\n\n  async function addStatusUpdate() {\n    const newStatus = elements.statusInput!.value.trim();\n  \n    if (newStatus) {\n      try {\n        const currentUser = await getCurrentUser();\n        if (currentUser) {\n          // Check if statusUpdates exists, otherwise create an empty array\n          if (!currentUser.statusUpdates) {\n            currentUser.statusUpdates = [];\n          }\n          currentUser.statusUpdates.push(newStatus);\n          await saveUser(currentUser);\n          elements.statusInput!.value = \"\";\n          displayStatusUpdates();\n        } else {\n          elements.errorMessage.innerHTML = \"Failed to find the current user.\";\n          elements.body.appendChild(elements.errorMessage);\n          setTimeout(() => {\n            elements.errorMessage.remove();\n          }, 3000);\n        }\n      } catch (err) {\n        console.log(err);\n        elements.errorMessage.innerHTML = \"Failed to update status. Try again.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n          elements.errorMessage.remove();\n        }, 3000);\n      }\n    } else {\n      elements.errorMessage.innerHTML = \"Please enter a status update.\";\n      elements.body.appendChild(elements.errorMessage);\n      setTimeout(() => {\n        elements.errorMessage.remove();\n      }, 3000);\n    }\n  }\n  \n  \n  \n  \n  \n  \n\n  async function displayStatusUpdates() {\n    const currentUser = await getCurrentUser();\n    if (currentUser) {\n      const latestStatus = currentUser.statusUpdates ? currentUser.statusUpdates.slice(-1)[0] || '' : '';\n  \n      // Update the loggedInUserHeader with the current user's latest status update\n      const loggedInUserHeader = document.getElementById(\"loggedInUserHeader\");\n      if (loggedInUserHeader) {\n        loggedInUserHeader.textContent = `Logged in as: ${currentUser.userName} - Status: ${latestStatus}`;\n      } else {\n        console.error(\"loggedInUserHeader element not found\");\n      }\n    }\n  }\n  \n  \n  async function displayLoggedInUsers() {\n    const users = await getUsers();\n    const currentUser = await getCurrentUser();\n\n    users.forEach(user => {\n        const li = document.createElement(\"li\");\n        li.textContent = `${user.userName}:`;\n\n        // Check that the element exists before appending the child element\n        if (elements.loggedInUsersList) {\n            elements.loggedInUsersList.appendChild(li);\n        }\n    });\n}\n\n\n  \n  async function visitOtherUserPage(username: string): Promise<void> {\n    const user = await getUserByUsername(username);\n    if (!user) {\n      throw new Error(\"User not found.\");\n    }\n    elements.loggedInUsersPage!.style.display = \"none\";\n    elements.otherUserPage!.style.display = \"block\";\n    elements.otherUserPage!.querySelector(\".username\")!.textContent = user.userName;\n    elements.otherUserPage!.querySelector(\".profile-pic\")!.setAttribute(\"src\", user.profilePictureUrl);\n  }\n  \n  async function displayAllUsers() {\n    try {\n      const allUsers = await getUsers();\n      const userList = document.createElement(\"ul\");\n      allUsers.forEach((user) => {\n        const listItem = document.createElement(\"li\");\n        listItem.textContent = user.userName;\n        listItem.addEventListener(\"click\", () => {\n          visitOtherUserPage(user.userName);\n        });\n        userList.appendChild(listItem);\n      });\n      if (elements.allUsersList) {\n        elements.allUsersList.innerHTML = \"\";\n        elements.allUsersList.appendChild(userList);\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n  \n\nasync function deleteCurrentUser() {\n    const userName = elements.usernameInput!.value.trim();\n    const password = elements.passwordInput!.value.trim();\n\n    if (userName && password) {\n        try {\n            const users = await getUsers();\n\n            const foundUser = users.find((user) => user.userName === userName && user.password === password);\n\n            if (foundUser) {\n              await deleteUser(foundUser.userName);\n              localStorage.removeItem(\"loggedInUser\");\n                elements.userDeletedSuccessfully.innerHTML = \"User deleted successfully!\";\n                elements.body.appendChild(elements.userDeletedSuccessfully);\n                setTimeout(() => {\n                    elements.userDeletedSuccessfully.remove();\n                }, 3000);\n\n                // Reset the input fields and navigate back to the login page\n                elements.usernameInput!.value = '';\n                elements.passwordInput!.value = '';\n                elements.container.style.display = \"none\";\n                elements.logInpage.style.display = \"block\";\n            } else {\n                elements.failedToDeleteUser.innerHTML = \"Failed to delete user. Incorrect username or password.\";\n                elements.body.appendChild(elements.failedToDeleteUser);\n                setTimeout(() => {\n                    elements.failedToDeleteUser.remove();\n                }, 3000);\n            }\n        } catch (err) {\n            console.log(err);\n            elements.failedToDeleteUser.innerHTML = \"Failed to delete user. Try again.\";\n            elements.body.appendChild(elements.failedToDeleteUser);\n            setTimeout(() => {\n                elements.failedToDeleteUser.remove();\n            }, 3000);\n        }\n    } else {\n        elements.errorMessage.innerHTML = \"Please enter a username and password.\";\n        elements.body.appendChild(elements.errorMessage);\n        setTimeout(() => {\n            elements.errorMessage.remove();\n        }, 3000);\n    }\n}\n\n\n\n\nfunction setupEventListeners() {\n    console.log(\"Create Account Button: \", elements.createAccountButton);\n    console.log(\"Submit Button: \", elements.submitButton);\n    console.log(\"Delete Account Button: \", elements.deleteAccountButton);\n    console.log(\"Submit Status: \", elements.submitStatus);\n\n    elements.createAccountButton!.addEventListener(\"click\", () => {\n        createUser();\n    });\n\n    elements.submitButton!.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        loginUser();\n    });\n\n    elements.deleteAccountButton!.addEventListener(\"click\", () => {\n        deleteCurrentUser();\n    });\n\n    elements.submitStatus!.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        addStatusUpdate();\n    });\n}\n\n\n\nasync function init() {\n    document.addEventListener('DOMContentLoaded', async () => {\n        setupEventListeners();\n        await displayAllUsers(); \n    });\n}\n\ninit();\n\n"],"names":["$180a3ec4d9117066$export$7a5d735b2ab6389d","imageSelection","document","getElementById","createAccountButton","submitButton","usernameInput","passwordInput","form","errorMessage","createElement","userDeletedSuccessfully","failedToDeleteUser","messageInput","listItem","body","accountCreated","logInpage","container","currentUser","statusUpdates","newStatusUpdate","addStatusUpdate","loggedInUsersList","querySelector","otherUserPageHeader","deleteAccount","deleteAccountButton","statusInput","statusUpdateButton","otherUserPage","loggedInUsersPage","statusUpdatesList","submitStatus","allUsersList","userStatus","style","display","appendChild","className","$fe11eb32f95cc6d1$var$baseUrl","async","$fe11eb32f95cc6d1$export$925a4945a6cd0f3e","response","fetch","ok","Error","status","statusText","users","json","Object","values","err","$fe11eb32f95cc6d1$export$ca0e1882e225378b","user","url","userName","init","method","JSON","stringify","headers","console","log","$fe11eb32f95cc6d1$export$7d0f10f273c0438a","username","$fe11eb32f95cc6d1$export$e5432d4c8eb97ea7","find","$fe11eb32f95cc6d1$export$fe689bf0ea1a115a","$afc4fdb57cd652c4$var$loginUser","value","trim","password","foundUser","newUser","localStorage","setItem","textContent","error","$afc4fdb57cd652c4$var$displayStatusUpdates","forEach","li","$afc4fdb57cd652c4$var$displayLoggedInUsers","$afc4fdb57cd652c4$var$displayUserStatus","innerHTML","setTimeout","remove","latestStatus","slice","loggedInUserHeader","$afc4fdb57cd652c4$var$displayAllUsers","allUsers","userList","addEventListener","setAttribute","profilePictureUrl","$afc4fdb57cd652c4$var$visitOtherUserPage","message","$afc4fdb57cd652c4$var$deleteCurrentUser","removeItem","$afc4fdb57cd652c4$var$setupEventListeners","selectedImage","some","imageurl","$afc4fdb57cd652c4$var$createUser","event","preventDefault","newStatus","push","$afc4fdb57cd652c4$var$addStatusUpdate","$afc4fdb57cd652c4$var$init"],"version":3,"file":"index.0ed59ad3.js.map"}